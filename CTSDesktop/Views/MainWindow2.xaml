<Window x:Class="Fiehnlab.CTSDesktop.Views.MainWindow2" x:Name="MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:v="clr-namespace:Fiehnlab.CTSDesktop.Views"
        xmlns:m="clr-namespace:Fiehnlab.CTSDesktop.Models"
        xmlns:vm="clr-namespace:Fiehnlab.CTSDesktop.ViewModels"
        xmlns:d="clr-namespace:Fiehnlab.CTSDesktop.Design"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        mc:Ignorable="b"
        b:DataContext="{b:DesignInstance vm:MainWindowViewModel}"
        SizeToContent="Height" MaxWidth="1600" 
        WindowStartupLocation="CenterScreen">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="MinWidth" Value="85" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFB4C3F0" Offset="0"/>
                        <GradientStop Color="#FF6E7FB6" Offset="0.2"/>
                        <GradientStop Color="#FF2B469E" Offset="0.9"/>
                        <GradientStop Color="#FF0C2066" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="MyContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FFAFAFD7" Offset="0"/>
                                            <GradientStop Color="#FF505082" Offset="0.20"/>
                                            <GradientStop Color="#FF37375F" Offset="0.90"/>
                                            <GradientStop Color="#FF5A5A82" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FF9696BE" Offset="1"/>
                                            <GradientStop Color="#FF37375F" Offset="0.20"/>
                                            <GradientStop Color="#FF505082" Offset="0.90"/>
                                            <GradientStop Color="#FF787896" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FF999999"/>
                                <Setter Property="Foreground" Value="#FFcacaca"/>
                                <Setter Property="BorderBrush" Value="#FF666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <StackPanel x:Key="ConvertButtonContent">
            <Label Name="Caption" Content="Convert" 
                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
            <Label Name="Items" Content="{Binding ConvertItemCount, FallbackValue=0}" 
                   ContentStringFormat="Items:"
                   FontSize="10"
                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
        </StackPanel>

    </Window.Resources>
    <Window.BorderBrush>
        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowFrameColorKey}}"/>
    </Window.BorderBrush>
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
    </Window.Background>

    <DockPanel x:Name="LayoutRoot" LastChildFill="True" >

        <Border DockPanel.Dock="Bottom" BorderThickness="1" BorderBrush="Gray">
            <StackPanel x:Name="StatusBar" Orientation="Horizontal" 
        		        DockPanel.Dock="Bottom" 
        	    	    Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
            		    Height="25">
                <Label x:Name="status" 
        			    Content="{Binding CurrentFrom, FallbackValue=designing...}" 
        			    Margin="1" />
            </StackPanel>
        </Border>
        <DockPanel x:Name="BottomControls" LastChildFill="True" DockPanel.Dock="Bottom">

            <DockPanel x:Name="TopControls" DockPanel.Dock="Left">
                <Border Margin="5" BorderBrush="Gray" BorderThickness="1" CornerRadius="5" MinWidth="200">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2"/>
                    </Border.Effect>
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}"/>
                    </Border.Background>
                    <StackPanel>
                        <StackPanel Orientation="Vertical" Margin="10"
                			HorizontalAlignment="Stretch"
                			Grid.Column="0" Grid.Row="0">
                            <Label x:Name="LabelFrom" Content="Convert From"/>
                            <ComboBox x:Name="FromValues" MinHeight="25" 
                				ItemsSource="{Binding FromValuesList}" 
                				SelectedItem="{Binding CurrentFrom, Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged}"
                				IsSynchronizedWithCurrentItem="True"
                				ToolTip="Select source ID" TabIndex="1">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type m:IDSource}">
                                        <Label Content="{Binding Name}" VerticalAlignment="Center" Height="20" FontSize="10" Padding="3"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding UpdateCurrentFromCommand}" 
                							CommandParameter="{Binding SelectedValue, ElementName=FromValues}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Vertical"
                			HorizontalAlignment="Stretch"
                			Grid.Column="0" Grid.Row="1"
                			Margin="10">
                            <Label x:Name="LabelTo" Content="Convert To"/>
                            <ListBox x:Name="ToValues" MaxHeight="200"
                				ItemsSource="{Binding ToValuesList}"
                				SelectionMode="Multiple"
                				ToolTip="Select destination IDs"
                				TabIndex="2">
                                <ListBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}"/>
                                </ListBox.BorderBrush>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="IsSelected"
                							Value="{Binding IsSelected, Mode=TwoWay}" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type m:IDSource}">
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding IsSelected}" VerticalAlignment="Center"/>
                                            <Label Content="{Binding Name}" VerticalAlignment="Center" Height="20" FontSize="10" Padding="3"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding UpdateCurrentToCommand, ValidatesOnDataErrors=True}" 
                							CommandParameter="{Binding SelectedItems, ElementName=ToValues}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </DockPanel>

            <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Margin="5" 
                        Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}"
                        VerticalAlignment="Bottom"
                        DockPanel.Dock="Bottom">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="2"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Command="{Binding ConvertCommand}"
                                Content="{StaticResource ConvertButtonContent}" TabIndex="4" />
                    <Button Content="Exit" 
                                Command="{Binding CloseCommand}" 
                                CommandParameter="{Binding ElementName=MainView}" TabIndex="5"/>
                </StackPanel>
            </Border>
            <Border BorderThickness="1" CornerRadius="5" BorderBrush="Gray" Padding="10" Margin="5" DockPanel.Dock="Right" VerticalAlignment="Stretch">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="2"/>
                </Border.Effect>
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}"/>
                </Border.Background>
                <StackPanel Orientation="Vertical" >
                    <Label x:Name="LabelKeys" Content="Keywords"/>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" IsTabStop="True">
                        <ScrollViewer.Background>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                        </ScrollViewer.Background>
                        <Border BorderBrush="Black" BorderThickness="1">
                            <TextBox x:Name="Keywords" 
                                       Text="{Binding Keywords, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                       MinLines="10"
                                       MinHeight="300"
                                       AcceptsReturn="True"
                                       TextWrapping="WrapWithOverflow"
                                       HorizontalContentAlignment="Stretch" 
                                       VerticalContentAlignment="Stretch" MaxLines="1000" TabIndex="3">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextInput">
                                        <i:InvokeCommandAction CommandName="ParseTextCommand" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Drop">
                                        <i:InvokeCommandAction CommandName="ParseTextCommand" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </Border>
                    </ScrollViewer>
                </StackPanel>
            </Border>
        </DockPanel>
    </DockPanel>
</Window>
